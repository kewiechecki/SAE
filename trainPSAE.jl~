include("SAE.jl")
include("PSAE.jl")
include("trainingfns.jl")
include("models.jl")
include("auxfns.jl")

using MLDatasets, StatsPlots, OneHotArrays
using Flux: logitcrossentropy

using JLD2,Tables,CSV
using StatsPlots

# where to write the toy model
path = "data/MNIST/"

epochs = 1000
batchsize=512

η = 0.001
λ = 0.001
opt = Flux.Optimiser(Flux.AdamW(η),Flux.WeightDecay(λ))
α = 0.001

m = 3
d = 27
k = 12

outer = outermodel() |> gpu
state_outer = JLD2.load(path*"state_outer.jld2","state_outer");
Flux.loadmodel!(outer,state_outer)

sae_linear = SAE(m,d,identity) |> gpu
state_linear = JLD2.load(path*"state_linear.jld2","state_linear")
Flux.loadmodel!(sae_linear,state_linear)

partitioner = Chain(Dense(m => k,relu))
psae = PSAE(sae_linear,partitioner) |> gpu

L = []
train!(psae,outer,α,loader,opt,epochs,logitcrossentropy,L,
       path=path*"inner")

state_PSAE = Flux.state(psae) |> cpu;
jldsave(path*"state_PSAE.jld2";state_PSAE)
Tables.table(L) |> CSV.write(path*"L_PSAE.csv")
